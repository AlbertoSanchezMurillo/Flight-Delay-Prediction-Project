apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.31.2 (a92241f79)
  creationTimestamp: null
  labels:
    io.kompose.service: airflow
  name: airflow
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: airflow
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.31.2 (a92241f79)
      creationTimestamp: null
      labels:
        io.kompose.network/practica-creativa2-hdfs: "true"
        io.kompose.service: airflow
    spec:
      containers:
        - args:
            - bash
            - -c
            - |2-
                   airflow db upgrade &&
                   airflow users create --username admin --password admin --firstname admin --lastname admin --role Admin --email admin@example.com &&
                   supervisord -c /opt/airflow/supervisord.conf
          env:
            - name: AIRFLOW__CORE__DAGS_FOLDER
              value: /opt/airflow/resources
            - name: AIRFLOW__CORE__EXECUTOR
              value: LocalExecutor
            - name: AIRFLOW__CORE__LOAD_EXAMPLES
              value: "False"
            - name: AIRFLOW__CORE__SQL_ALCHEMY_CONN
              value: postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
            - name: AIRFLOW__WEBSERVER__EXPOSE_CONFIG
              value: "True"
            - name: _AIRFLOW_WWW_USER_PASSWORD
              value: admin
            - name: _AIRFLOW_WWW_USER_USERNAME
              value: admin
          image: airflow
          name: airflow
          ports:
            - containerPort: 8080
              hostPort: 8089
              protocol: TCP
          resources: {}
          volumeMounts:
            - mountPath: /opt/airflow/resources
              name: airflow-claim0
            - mountPath: /opt/airflow/dags
              name: airflow-claim1
            - mountPath: /home/airflow/.local
              name: airflow-python-packages
            - mountPath: /tmp/mlruns
              name: airflow-claim3
            - mountPath: /practica_creativa2
              name: airflow-claim4
            - mountPath: /opt/airflow/data
              name: airflow-claim5
      restartPolicy: Always
      volumes:
        - name: airflow-claim0
          persistentVolumeClaim:
            claimName: airflow-claim0
        - name: airflow-claim1
          persistentVolumeClaim:
            claimName: airflow-claim1
        - name: airflow-python-packages
          persistentVolumeClaim:
            claimName: airflow-python-packages
        - name: airflow-claim3
          persistentVolumeClaim:
            claimName: airflow-claim3
        - name: airflow-claim4
          persistentVolumeClaim:
            claimName: airflow-claim4
        - name: airflow-claim5
          persistentVolumeClaim:
            claimName: airflow-claim5
status: {}
